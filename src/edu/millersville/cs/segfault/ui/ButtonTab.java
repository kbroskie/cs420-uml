package edu.millersville.cs.segfault.ui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.plaf.basic.BasicButtonUI;


/**************************************************************************
 * ButtonTab is the class responsible for creating
 * a closeable tab button.
 * @author Kimberlyn Broskie
 *************************************************************************/
public class ButtonTab extends JPanel {
	
	private static final long serialVersionUID = -8719959125259611923L;
	private JTabbedPane currentPane;

	ButtonTab(final JTabbedPane pane, String tabTitle) {
		super(new BorderLayout());
		
	    if (pane == null) {
	    	throw new NullPointerException("TabbedPane is null");
	    }
	    this.currentPane = pane;
	    
		JLabel titleLabel = new JLabel(tabTitle);
		titleLabel.setBorder(BorderFactory.createEmptyBorder(0, 3, 0, 7));
	    add(titleLabel, BorderLayout.WEST);
	    
	    JButton button = new TabPaneButton();
	    add(button, BorderLayout.EAST);
	    setBorder(BorderFactory.createEmptyBorder(5, 0, 0, 0));
	    setOpaque(false);
	    }
	
		
	 	// Inner class to format the button options.
	    private class TabPaneButton extends JButton {
			private static final long serialVersionUID = 7476481130690325277L;

			public TabPaneButton() {
				super();
	           	setPreferredSize(new Dimension(16, 16));
	        	setToolTipText("Close Tab");
	        	setUI(new BasicButtonUI());
	        	setIcon(new ImageIcon("img/16/Destroy.png"));
	        	setContentAreaFilled(false);
	    		setBorderPainted(false);
	    		setFocusPainted(true);
	        	setRolloverEnabled(true);
	        	addActionListener(new TabButtonListener());
	        }
		}
		
	    /**************************************************************************
	     * Private inner class that handles the events generated by the user 
	     * clicking a TabButton
	     * @param e the selected event and source 
	     *************************************************************************/
	    private class TabButtonListener implements ActionListener {
			public void actionPerformed(ActionEvent e) {
				int i = currentPane.indexOfTabComponent(ButtonTab.this);
			    if (i != -1) {
			    	int closeTabOption = JOptionPane.YES_NO_OPTION;
			        int response = JOptionPane.showConfirmDialog (null, "Are you sure you want to close this tab?", 
			        		"Unsaved work will be lost!", JOptionPane.YES_NO_OPTION);
			            
			        if(closeTabOption == response) {
			        	currentPane.remove(i);
			        }
			    }
			}
		}
}