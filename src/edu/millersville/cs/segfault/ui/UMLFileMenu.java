package edu.millersville.cs.segfault.ui;

import java.awt.Event;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.KeyStroke;

import edu.millersville.cs.segfault.model.UMLModel;

/**
 * UMLFileMenu is the class responsible for instantiating 
 * the File submenu and its action listeners.
 * @author Kimberlyn Broskie
 */

public class UMLFileMenu extends JMenu 
						implements ActionListener {
	
	//*************************************************************************
	// Instance Variables
	//*************************************************************************
	
	private static final long serialVersionUID = 2052974378829469666L;

	private UMLPanel umlPanel;
	
	/**** FILE MENU VARIABLES */
	private static final String fileMenuText = "File";
	private static final String newMenuText = "New";
	private static final String openMenuText = "Open";
	private static final String saveMenuText = "Save";
	private static final String saveAsMenuText = "Save as...";
	private static final String exitMenuText = "Exit";
	
	//*************************************************************************
	// Constructors	
	//*************************************************************************
	
	/*
	 * Constructor to build the File submenu
	 * @param wFrame the frame for the interface
	 * @param umlPanel the panel for the current UML model
	 */	
	public UMLFileMenu (JFrame wFrame, UMLPanel umlPanel) {
		super(fileMenuText);

		this.umlPanel = umlPanel;
		
	   // Create the menu items, adding action listeners and accelerators.	   
	   JMenuItem newItem = new JMenuItem(newMenuText);
	   newItem.addActionListener(this);
	   newItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, Event.CTRL_MASK));
	   
	   JMenuItem openItem = new JMenuItem(openMenuText);
	   openItem.addActionListener(this);
	   openItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, Event.CTRL_MASK));

	   JMenuItem saveItem = new JMenuItem(saveMenuText);
	   saveItem.addActionListener(this);
	   saveItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, Event.CTRL_MASK));
	   
	   JMenuItem saveAsItem = new JMenuItem(saveAsMenuText);
	   saveAsItem.addActionListener(this);

	   JMenuItem exitItem = new JMenuItem(exitMenuText);
	   exitItem.addActionListener(new ExitListener());
	   exitItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, Event.CTRL_MASK));

	   // Add the sub-menus to the File menu.
	   this.add(newItem);
	   this.add(openItem);
	   this.add(saveItem);
	   this.add(saveAsItem);
	   this.add(exitItem);
	}
	
	
	//*************************************************************************
	// Action Listeners
	//*************************************************************************
	
	/**
	 * Handles the event generated when the user selects 
	 * the exit option from the File menu.
	 * @param e the event information triggered by selecting the exit option
	 */
	private class ExitListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			System.exit(0);
		}
	}
	
	/**
	 * Handles the events generated by the user selecting
	 * a file menu option.
	 * @param se the selected event and source 
	 */
	 public void actionPerformed(ActionEvent se) {
		 String selectedCommand = se.getActionCommand();
	 	 	 
		 if (selectedCommand == newMenuText) {
			 umlPanel.changeModel(new UMLModel());
		 }
		 else if (selectedCommand == openMenuText) {
			 umlPanel.load();
		 }
		 else if (selectedCommand == saveMenuText) {
			 umlPanel.save(umlPanel.model().serialize());
		 }
		 else if (selectedCommand == saveAsMenuText) {
			 umlPanel.saveAs(umlPanel.model().serialize());
		 }
	 }
}
