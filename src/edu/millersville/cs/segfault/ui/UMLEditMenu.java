package edu.millersville.cs.segfault.ui;

import java.awt.Event;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.KeyStroke;

public class UMLEditMenu extends JMenu
						implements ActionListener {
	
	//*************************************************************************
	// Instance Variables
	//*************************************************************************
	
	private static final long serialVersionUID = -3884476289367851522L;

	private UMLPanel umlPanel;
	
	/**** EDIT MENU VARIABLES */
	private static final String editMenuText = "Edit";
	private static final String undoMenuText = "Undo";
	private static final String redoMenuText = "Redo";
	private static final String selectAllText = "Select/Deselect All";
	
	
	//*************************************************************************
	// Constructors	
	//*************************************************************************
		
	/*
	* Constructor to build the Edit submenu
	* @param wFrame the frame for the interface
	* @param umlPanel the panel for the current UML model
	*/	
	public UMLEditMenu (JFrame wFrame, UMLPanel umlPanel) {
	   super(editMenuText);
	   
	   this.umlPanel = umlPanel;

	   // Create the edit submenu items, and add accelerators.
	   JMenuItem undoItem = new JMenuItem(undoMenuText);
	   undoItem.addActionListener(this);
	   undoItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_Z, Event.CTRL_MASK));

	   JMenuItem redoItem = new JMenuItem(redoMenuText);
	   redoItem.addActionListener(this);
	   redoItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_Y, Event.CTRL_MASK));
	   
	   JMenuItem selectAllItem = new JMenuItem(selectAllText);
	   selectAllItem.addActionListener(this);
	   selectAllItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, Event.CTRL_MASK));
	   
	   // Add the sub-menus to the Edit menu.
	   this.add(undoItem);
	   this.add(redoItem);
	   this.add(selectAllItem);
	}
	
	
	//*************************************************************************
	// Action Listeners
	//*************************************************************************
	
	/**
	 * Handles the events generated by the user selecting
	 * an Edit submenu option.
	 * @param se the selected event and source 
	 */
	 public void actionPerformed(ActionEvent se) {
		 String selectedCommand = se.getActionCommand();
		 
	 	 if (selectedCommand == undoMenuText) {
			 umlPanel.undo();	
		 }
		 else if (selectedCommand == redoMenuText) {
			 umlPanel.redo();
		 } 
	}
}
