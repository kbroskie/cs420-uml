package edu.millersville.cs.segfault.ui.menu;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

import javax.swing.JCheckBox;
import javax.swing.JMenu;

import edu.millersville.cs.segfault.ui.UMLWindow;

/**************************************************************************
 * A menu for enabling and disabling subviews and the toolbar in the main 
 * window.
 * @author Daniel Rabiega, Kimberlyn Broskie, 
 *************************************************************************/
public class ViewMenu extends JMenu {
	
	//*************************************************************************
	// Static Instance Variables
	//*************************************************************************
	private static final long serialVersionUID = 4310696522154979212L;
	private static final String hideToolbarText = "Show Toolbar";

	//*************************************************************************
	// Instance Variables
	//*************************************************************************
	private UMLWindow parent;
	
	private JCheckBox toolbarCheckBox;

	
	
	/**************************************************************************
	 * Builds a viewMenu and initializes it with a reference to it's parent.
	 * @param parent the frame for the interface
	 *************************************************************************/
	public ViewMenu(UMLWindow parent) {
		super("View");
		this.parent = parent;
		
		// Create a checkbox to show/hide the toolbar.
		toolbarCheckBox = new JCheckBox(hideToolbarText);
		toolbarCheckBox.setSelected(true);
		toolbarCheckBox.addItemListener(new ToolbarCheckBoxListener());
		this.add(toolbarCheckBox);
		
	}
	
		 
	/**************************************************************************
	 * Private inner class that handles the events generated by the user 
	 * clicking a CheckBox.
	 * @param e the selected event and source 
	 *************************************************************************/
	 private class ToolbarCheckBoxListener implements ItemListener {
		 public void itemStateChanged(ItemEvent e)
	     {
			 if (toolbarCheckBox.isSelected()) {
				 parent.getToolbar().setVisible(true);
			 }
			 else {
				 parent.getToolbar().setVisible(false);
	         }
	     }
	 }
}
