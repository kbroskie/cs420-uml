package edu.millersville.cs.segfault.ui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JPanel;

import edu.millersville.cs.segfault.model.DrawableType;

/**************************************************************************
 * UMLOptionsPanel is the class responsible for
 * creating a panel containing the different
 * objects and relations a user can select.
 * @author Kimberlyn Broskie
 *************************************************************************/
public class UMLOptionsPanel extends JPanel
							implements ActionListener {

	//*************************************************************************
	// Static Instance Variables
	//*************************************************************************
	private static final long serialVersionUID = -9118912567292664779L;
	
	// OBJECT VARIABLES
	private static final String optionsPaneObjectDraw = "Object";
	
	// RELATION VARIABLES
	private static final String optionsPaneRelationDraw = "Relation";
	
	// OTHER OPTION VARIABLES
	private static final String optionsPaneSelect = "Select";
	
	// Dimensions for the panel and buttons.
	private static final Dimension OPTIONS_PANE_MAX_SIZE = new Dimension(132, 520);
	private static final Dimension BUTTON_SIZE = new Dimension(128, 32);

	
	//*************************************************************************
	// Instance Variables
	//*************************************************************************
	private UMLWindow parentWindow;
	
	//*************************************************************************
	// Constructors	
	//*************************************************************************
	
	/**************************************************************************
	 * Builds a panel to hold the options for various objects and 
	 * relations that a user can select.
	 * @param umlPanel the panel for the current UML model.
	 *************************************************************************/
	 public UMLOptionsPanel (UMLWindow parent) {
		 super();
		 parentWindow = parent;
		 
		 // Set the layout.
		 setLayout(new FlowLayout(FlowLayout.LEFT, 2, 2));
		 setPreferredSize(OPTIONS_PANE_MAX_SIZE);
		 
		 // Build and add the select button.
		 JButton selectionButton = new JButton(optionsPaneSelect);
		 selectionButton.addActionListener(this);
		 selectionButton.setPreferredSize(BUTTON_SIZE);
		 add(selectionButton);  
		 
		 // Create the object button and add an action listener.
		 JButton objectButton = new JButton(optionsPaneObjectDraw);
		 objectButton.addActionListener(this);
		 objectButton.setPreferredSize(BUTTON_SIZE);
		 add(objectButton, BorderLayout.CENTER);
			   
		 // Create the relation buttons and action listeners.
		 JButton relationButton = new JButton(optionsPaneRelationDraw);
		 relationButton.addActionListener(this);
		 relationButton.setPreferredSize(BUTTON_SIZE);
		 add(relationButton);
	} 
	 
	 
	//*************************************************************************
	// Event Listeners
	//*************************************************************************
	 
	/**************************************************************************
	 * Handles the events generated by the user selecting
	 * an option.
	 * @param se the selected event and source 
	 *************************************************************************/
	public void actionPerformed(ActionEvent se) {
		String selectedCommand = se.getActionCommand();

		if (selectedCommand == optionsPaneSelect ) {
			parentWindow.getUMLPanel().changeInteractionMode(
					new SelectionMode(parentWindow.getUMLPanel()));
		}
		else if (selectedCommand == optionsPaneRelationDraw ) {
			parentWindow.getUMLPanel().changeInteractionMode(
					new DrawMode(DrawableType.RELATION, parentWindow.getUMLPanel()));
		}
		else if (selectedCommand == optionsPaneObjectDraw ) {
			parentWindow.getUMLPanel().changeInteractionMode(
					new DrawMode(DrawableType.OBJECT, parentWindow.getUMLPanel()));
		}			
	} 	 
}
