package edu.millersville.cs.segfault.ui.panels;

import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.border.TitledBorder;

import edu.millersville.cs.segfault.model.DrawableType;
import edu.millersville.cs.segfault.ui.DrawMode;
import edu.millersville.cs.segfault.ui.UMLPanel;

/**************************************************************************
 * UMLRelationsPanel is the class responsible for
 * creating a panel containing the different
 * relations a user can select.
 * @author Kimberlyn Broskie
 *************************************************************************/
public class UMLRelationsPanel extends JPanel
							implements ActionListener {
	
	//*************************************************************************
	// Static Instance Variables
	//*************************************************************************
	private static final long serialVersionUID = 8712606368436645568L;
	
	// RELATION VARIABLES
	private static final String optionsPaneRelationDraw = "Relation";
	
	//*************************************************************************
	// Instance Variables
	//*************************************************************************
	// Panel containing the model
	private UMLPanel umlPanel;
	
	//*************************************************************************
	// Constructors	
	//*************************************************************************
		
	/**************************************************************************
	 * Builds a panel to hold the relations options that may be selected.
	 * @param umlPanel the panel for the current UML model.
	 *************************************************************************/
		UMLRelationsPanel (UMLPanel umlPanel) {
		super();
			
		this.umlPanel = umlPanel;
			
		// Set the panel layout and title.
		setLayout(new GridLayout(7,1));
		setBorder(BorderFactory.createTitledBorder(
				  BorderFactory.createEmptyBorder(), "Relations", 
				  TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, 
				  new Font("SansSerif", Font.PLAIN, 15), Color.BLACK));
			
		// Create the relation buttons and action listeners.
		JButton relationButton = new JButton(optionsPaneRelationDraw);
		relationButton.addActionListener(this);
		add(relationButton);
	}
	
	//*************************************************************************
	// Action Listeners
	//*************************************************************************
	
	/**************************************************************************
	 * Handles the events generated by the user selecting
	 * a relation option.
	 * @param se the selected event and source 
	 *************************************************************************/
	public void actionPerformed(ActionEvent se) {
	String selectedCommand = se.getActionCommand();

		if (selectedCommand == optionsPaneRelationDraw ) {
			umlPanel.changeInteractionMode(new DrawMode(DrawableType.RELATION, umlPanel));
		}
	} 	 
}
